#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations


import typing as _typing

import enum

import folly.iobuf as _fbthrift_iobuf
import thrift.python.types as _fbthrift_python_types
import thrift.python.exceptions as _fbthrift_python_exceptions

import apache.thrift.op.patch.thrift_types

import apache.thrift.type.standard.thrift_types

class _fbthrift_compatible_with_MyEnum:
    pass


class MyEnum(_fbthrift_python_types.Enum, int, _fbthrift_compatible_with_MyEnum):
    MyValue0: MyEnum = ...
    def _to_python(self) -> MyEnum: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyEnum": ...  # type: ignore
    def _to_py_deprecated(self) -> int: ...


class _fbthrift_compatible_with_MyData:
    pass


class MyData(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyData):
    data1: _typing.Final[str] = ...
    data2: _typing.Final[int] = ...
    def __init__(
        self, *,
        data1: _typing.Optional[str]=...,
        data2: _typing.Optional[int]=...
    ) -> None: ...

    def __call__(
        self, *,
        data1: _typing.Optional[str]=...,
        data2: _typing.Optional[int]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[str, int]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyData": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyData": ...  # type: ignore


class _fbthrift_compatible_with_MyDataWithCustomDefault:
    pass


class MyDataWithCustomDefault(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyDataWithCustomDefault):
    data1: _typing.Final[str] = ...
    data2: _typing.Final[int] = ...
    def __init__(
        self, *,
        data1: _typing.Optional[str]=...,
        data2: _typing.Optional[int]=...
    ) -> None: ...

    def __call__(
        self, *,
        data1: _typing.Optional[str]=...,
        data2: _typing.Optional[int]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[str, int]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyDataWithCustomDefault": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataWithCustomDefault": ...  # type: ignore


class _fbthrift_compatible_with_InnerUnion:
    pass


class InnerUnion(_fbthrift_python_types.Union, _fbthrift_compatible_with_InnerUnion):
    innerOption: _typing.Final[bytes] = ...
    def __init__(
        self, *,
        innerOption: _typing.Optional[bytes]=...
    ) -> None: ...


    class Type(enum.Enum):
        EMPTY: InnerUnion.Type = ...
        innerOption: InnerUnion.Type = ...

    @classmethod
    def fromValue(cls, value: _typing.Union[None, bytes]) -> InnerUnion: ...
    value: _typing.Final[_typing.Union[None, bytes]]
    type: Type
    def get_type(self) -> Type:...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.InnerUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.InnerUnion": ...  # type: ignore


class _fbthrift_compatible_with_MyUnion:
    pass


class MyUnion(_fbthrift_python_types.Union, _fbthrift_compatible_with_MyUnion):
    option1: _typing.Final[str] = ...
    option2: _typing.Final[int] = ...
    option3: _typing.Final[InnerUnion] = ...
    def __init__(
        self, *,
        option1: _typing.Optional[str]=...,
        option2: _typing.Optional[int]=...,
        option3: _typing.Optional[_fbthrift_compatible_with_InnerUnion]=...
    ) -> None: ...


    class Type(enum.Enum):
        EMPTY: MyUnion.Type = ...
        option1: MyUnion.Type = ...
        option2: MyUnion.Type = ...
        option3: MyUnion.Type = ...

    @classmethod
    def fromValue(cls, value: _typing.Union[None, str, int, InnerUnion]) -> MyUnion: ...
    value: _typing.Final[_typing.Union[None, str, int, InnerUnion]]
    type: Type
    def get_type(self) -> Type:...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyUnion": ...  # type: ignore


class _fbthrift_compatible_with_MyStruct:
    pass


class MyStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStruct):
    structWithCustomDefault: _typing.Final[MyDataWithCustomDefault] = ...
    i32WithCustomDefault: _typing.Final[int] = ...
    mapMap: _typing.Final[_typing.Mapping[str, _typing.Mapping[str, int]]] = ...
    listMap: _typing.Final[_typing.Sequence[_typing.Mapping[str, int]]] = ...
    optMapVal: _typing.Final[_typing.Optional[_typing.Mapping[str, str]]] = ...
    optSetVal: _typing.Final[_typing.Optional[_typing.AbstractSet[str]]] = ...
    optListVal: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    optLateStructVal: _typing.Final[_typing.Optional[LateDefStruct]] = ...
    optStructVal: _typing.Final[_typing.Optional[MyData]] = ...
    optEnumVal: _typing.Final[_typing.Optional[MyEnum]] = ...
    optBinaryVal: _typing.Final[_typing.Optional[_fbthrift_iobuf.IOBuf]] = ...
    optStringVal: _typing.Final[_typing.Optional[str]] = ...
    optDoubleVal: _typing.Final[_typing.Optional[float]] = ...
    optFloatVal: _typing.Final[_typing.Optional[float]] = ...
    optI64Val: _typing.Final[_typing.Optional[int]] = ...
    optI32Val: _typing.Final[_typing.Optional[int]] = ...
    optI16Val: _typing.Final[_typing.Optional[int]] = ...
    optByteVal: _typing.Final[_typing.Optional[int]] = ...
    optBoolVal: _typing.Final[_typing.Optional[bool]] = ...
    lateStructVal: _typing.Final[LateDefStruct] = ...
    unionVal: _typing.Final[MyUnion] = ...
    structVal: _typing.Final[MyData] = ...
    enumVal: _typing.Final[MyEnum] = ...
    binaryVal: _typing.Final[_fbthrift_iobuf.IOBuf] = ...
    stringVal: _typing.Final[str] = ...
    doubleVal: _typing.Final[float] = ...
    floatVal: _typing.Final[float] = ...
    i64Val: _typing.Final[int] = ...
    i32Val: _typing.Final[int] = ...
    i16Val: _typing.Final[int] = ...
    byteVal: _typing.Final[int] = ...
    boolVal: _typing.Final[bool] = ...
    structWithFieldCustomDefault: _typing.Final[MyData] = ...
    def __init__(
        self, *,
        structWithCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefault]=...,
        i32WithCustomDefault: _typing.Optional[int]=...,
        mapMap: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...,
        listMap: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...,
        optMapVal: _typing.Optional[_typing.Mapping[str, str]]=...,
        optSetVal: _typing.Optional[_typing.AbstractSet[str]]=...,
        optListVal: _typing.Optional[_typing.Sequence[int]]=...,
        optLateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        optStructVal: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        optEnumVal: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        optBinaryVal: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        optStringVal: _typing.Optional[str]=...,
        optDoubleVal: _typing.Optional[float]=...,
        optFloatVal: _typing.Optional[float]=...,
        optI64Val: _typing.Optional[int]=...,
        optI32Val: _typing.Optional[int]=...,
        optI16Val: _typing.Optional[int]=...,
        optByteVal: _typing.Optional[int]=...,
        optBoolVal: _typing.Optional[bool]=...,
        lateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        unionVal: _typing.Optional[_fbthrift_compatible_with_MyUnion]=...,
        structVal: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        enumVal: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        binaryVal: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        stringVal: _typing.Optional[str]=...,
        doubleVal: _typing.Optional[float]=...,
        floatVal: _typing.Optional[float]=...,
        i64Val: _typing.Optional[int]=...,
        i32Val: _typing.Optional[int]=...,
        i16Val: _typing.Optional[int]=...,
        byteVal: _typing.Optional[int]=...,
        boolVal: _typing.Optional[bool]=...,
        structWithFieldCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyData]=...
    ) -> None: ...

    def __call__(
        self, *,
        structWithCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefault]=...,
        i32WithCustomDefault: _typing.Optional[int]=...,
        mapMap: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...,
        listMap: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...,
        optMapVal: _typing.Optional[_typing.Mapping[str, str]]=...,
        optSetVal: _typing.Optional[_typing.AbstractSet[str]]=...,
        optListVal: _typing.Optional[_typing.Sequence[int]]=...,
        optLateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        optStructVal: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        optEnumVal: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        optBinaryVal: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        optStringVal: _typing.Optional[str]=...,
        optDoubleVal: _typing.Optional[float]=...,
        optFloatVal: _typing.Optional[float]=...,
        optI64Val: _typing.Optional[int]=...,
        optI32Val: _typing.Optional[int]=...,
        optI16Val: _typing.Optional[int]=...,
        optByteVal: _typing.Optional[int]=...,
        optBoolVal: _typing.Optional[bool]=...,
        lateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        unionVal: _typing.Optional[_fbthrift_compatible_with_MyUnion]=...,
        structVal: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        enumVal: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        binaryVal: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        stringVal: _typing.Optional[str]=...,
        doubleVal: _typing.Optional[float]=...,
        floatVal: _typing.Optional[float]=...,
        i64Val: _typing.Optional[int]=...,
        i32Val: _typing.Optional[int]=...,
        i16Val: _typing.Optional[int]=...,
        byteVal: _typing.Optional[int]=...,
        boolVal: _typing.Optional[bool]=...,
        structWithFieldCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyData]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyDataWithCustomDefault, int, _typing.Mapping[str, _typing.Mapping[str, int]], _typing.Sequence[_typing.Mapping[str, int]], _typing.Mapping[str, str], _typing.AbstractSet[str], _typing.Sequence[int], LateDefStruct, MyData, MyEnum, _fbthrift_iobuf.IOBuf, str, float, float, int, int, int, int, bool, LateDefStruct, MyUnion, MyData, MyEnum, _fbthrift_iobuf.IOBuf, str, float, float, int, int, int, int, bool, MyData]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStruct": ...  # type: ignore


class _fbthrift_compatible_with_LateDefStruct:
    pass


class LateDefStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_LateDefStruct):
    def __init__(
        self,
    ) -> None: ...

    def __call__(
        self,
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[None]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.LateDefStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.LateDefStruct": ...  # type: ignore


class _fbthrift_compatible_with_Recursive:
    pass


class Recursive(_fbthrift_python_types.Struct, _fbthrift_compatible_with_Recursive):
    nodes: _typing.Final[_typing.Mapping[str, Recursive]] = ...
    def __init__(
        self, *,
        nodes: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_Recursive]]=...
    ) -> None: ...

    def __call__(
        self, *,
        nodes: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_Recursive]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Mapping[str, Recursive]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.Recursive": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Recursive": ...  # type: ignore


class _fbthrift_compatible_with_Bar:
    pass


class Bar(_fbthrift_python_types.Struct, _fbthrift_compatible_with_Bar):
    loop: _typing.Final[Loop] = ...
    def __init__(
        self, *,
        loop: _typing.Optional[_fbthrift_compatible_with_Loop]=...
    ) -> None: ...

    def __call__(
        self, *,
        loop: _typing.Optional[_fbthrift_compatible_with_Loop]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[Loop]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.Bar": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Bar": ...  # type: ignore


class _fbthrift_compatible_with_Loop:
    pass


class Loop(_fbthrift_python_types.Struct, _fbthrift_compatible_with_Loop):
    bar: _typing.Final[Bar] = ...
    def __init__(
        self, *,
        bar: _typing.Optional[_fbthrift_compatible_with_Bar]=...
    ) -> None: ...

    def __call__(
        self, *,
        bar: _typing.Optional[_fbthrift_compatible_with_Bar]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[Bar]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.Loop": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Loop": ...  # type: ignore


class _fbthrift_compatible_with_RefFields:
    pass


class RefFields(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RefFields):
    unique: _typing.Final[_typing.Sequence[int]] = ...
    shared_const: _typing.Final[_typing.Sequence[int]] = ...
    shared_mustable: _typing.Final[_typing.Sequence[int]] = ...
    opt_unique: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    opt_shared_const: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    opt_shared_mustable: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    opt_box: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    def __init__(
        self, *,
        unique: _typing.Optional[_typing.Sequence[int]]=...,
        shared_const: _typing.Optional[_typing.Sequence[int]]=...,
        shared_mustable: _typing.Optional[_typing.Sequence[int]]=...,
        opt_unique: _typing.Optional[_typing.Sequence[int]]=...,
        opt_shared_const: _typing.Optional[_typing.Sequence[int]]=...,
        opt_shared_mustable: _typing.Optional[_typing.Sequence[int]]=...,
        opt_box: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        unique: _typing.Optional[_typing.Sequence[int]]=...,
        shared_const: _typing.Optional[_typing.Sequence[int]]=...,
        shared_mustable: _typing.Optional[_typing.Sequence[int]]=...,
        opt_unique: _typing.Optional[_typing.Sequence[int]]=...,
        opt_shared_const: _typing.Optional[_typing.Sequence[int]]=...,
        opt_shared_mustable: _typing.Optional[_typing.Sequence[int]]=...,
        opt_box: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RefFields": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RefFields": ...  # type: ignore


class _fbthrift_compatible_with_MyDataPatch:
    pass


class MyDataPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyDataPatch):
    assign: _typing.Final[_typing.Optional[MyData]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[MyDataFieldPatch] = ...
    ensure: _typing.Final[MyDataEnsureStruct] = ...
    patch: _typing.Final[MyDataFieldPatch] = ...
    remove: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_MyDataFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_MyDataEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_MyDataFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_MyDataFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_MyDataEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_MyDataFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyData, bool, MyDataFieldPatch, MyDataEnsureStruct, MyDataFieldPatch, _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyDataPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyDataFieldPatch:
    pass


class MyDataFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyDataFieldPatch):
    data1: _typing.Final[apache.thrift.op.patch.thrift_types.StringPatch] = ...
    data2: _typing.Final[apache.thrift.op.patch.thrift_types.I32Patch] = ...
    def __init__(
        self, *,
        data1: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        data2: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...
    ) -> None: ...

    def __call__(
        self, *,
        data1: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        data2: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[apache.thrift.op.patch.thrift_types.StringPatch, apache.thrift.op.patch.thrift_types.I32Patch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyDataFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyDataEnsureStruct:
    pass


class MyDataEnsureStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyDataEnsureStruct):
    data1: _typing.Final[_typing.Optional[str]] = ...
    data2: _typing.Final[_typing.Optional[int]] = ...
    def __init__(
        self, *,
        data1: _typing.Optional[str]=...,
        data2: _typing.Optional[int]=...
    ) -> None: ...

    def __call__(
        self, *,
        data1: _typing.Optional[str]=...,
        data2: _typing.Optional[int]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[str, int]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyDataEnsureStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataEnsureStruct": ...  # type: ignore


class _fbthrift_compatible_with_MyDataWithCustomDefaultPatch:
    pass


class MyDataWithCustomDefaultPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyDataWithCustomDefaultPatch):
    assign: _typing.Final[_typing.Optional[MyDataWithCustomDefault]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[MyDataWithCustomDefaultFieldPatch] = ...
    ensure: _typing.Final[MyDataWithCustomDefaultEnsureStruct] = ...
    patch: _typing.Final[MyDataWithCustomDefaultFieldPatch] = ...
    remove: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefault]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefaultFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefaultEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefaultFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefault]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefaultFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefaultEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefaultFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyDataWithCustomDefault, bool, MyDataWithCustomDefaultFieldPatch, MyDataWithCustomDefaultEnsureStruct, MyDataWithCustomDefaultFieldPatch, _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyDataWithCustomDefaultPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataWithCustomDefaultPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyDataWithCustomDefaultFieldPatch:
    pass


class MyDataWithCustomDefaultFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyDataWithCustomDefaultFieldPatch):
    data1: _typing.Final[apache.thrift.op.patch.thrift_types.StringPatch] = ...
    data2: _typing.Final[apache.thrift.op.patch.thrift_types.I32Patch] = ...
    def __init__(
        self, *,
        data1: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        data2: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...
    ) -> None: ...

    def __call__(
        self, *,
        data1: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        data2: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[apache.thrift.op.patch.thrift_types.StringPatch, apache.thrift.op.patch.thrift_types.I32Patch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyDataWithCustomDefaultFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataWithCustomDefaultFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyDataWithCustomDefaultEnsureStruct:
    pass


class MyDataWithCustomDefaultEnsureStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyDataWithCustomDefaultEnsureStruct):
    data1: _typing.Final[_typing.Optional[str]] = ...
    data2: _typing.Final[_typing.Optional[int]] = ...
    def __init__(
        self, *,
        data1: _typing.Optional[str]=...,
        data2: _typing.Optional[int]=...
    ) -> None: ...

    def __call__(
        self, *,
        data1: _typing.Optional[str]=...,
        data2: _typing.Optional[int]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[str, int]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyDataWithCustomDefaultEnsureStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataWithCustomDefaultEnsureStruct": ...  # type: ignore


class _fbthrift_compatible_with_InnerUnionPatch:
    pass


class InnerUnionPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_InnerUnionPatch):
    assign: _typing.Final[_typing.Optional[InnerUnion]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[InnerUnionFieldPatch] = ...
    ensure: _typing.Final[InnerUnion] = ...
    patch: _typing.Final[InnerUnionFieldPatch] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_InnerUnion]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_InnerUnionFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_InnerUnion]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_InnerUnionFieldPatch]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_InnerUnion]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_InnerUnionFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_InnerUnion]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_InnerUnionFieldPatch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[InnerUnion, bool, InnerUnionFieldPatch, InnerUnion, InnerUnionFieldPatch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.InnerUnionPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.InnerUnionPatch": ...  # type: ignore


class _fbthrift_compatible_with_InnerUnionFieldPatch:
    pass


class InnerUnionFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_InnerUnionFieldPatch):
    innerOption: _typing.Final[apache.thrift.op.patch.thrift_types.BinaryPatch] = ...
    def __init__(
        self, *,
        innerOption: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BinaryPatch]=...
    ) -> None: ...

    def __call__(
        self, *,
        innerOption: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BinaryPatch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[apache.thrift.op.patch.thrift_types.BinaryPatch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.InnerUnionFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.InnerUnionFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyUnionPatch:
    pass


class MyUnionPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyUnionPatch):
    assign: _typing.Final[_typing.Optional[MyUnion]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[MyUnionFieldPatch] = ...
    ensure: _typing.Final[MyUnion] = ...
    patch: _typing.Final[MyUnionFieldPatch] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyUnion]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_MyUnionFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_MyUnion]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_MyUnionFieldPatch]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyUnion]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_MyUnionFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_MyUnion]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_MyUnionFieldPatch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyUnion, bool, MyUnionFieldPatch, MyUnion, MyUnionFieldPatch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyUnionPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyUnionPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyUnionFieldPatch:
    pass


class MyUnionFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyUnionFieldPatch):
    option1: _typing.Final[apache.thrift.op.patch.thrift_types.StringPatch] = ...
    option2: _typing.Final[apache.thrift.op.patch.thrift_types.I32Patch] = ...
    option3: _typing.Final[InnerUnionPatch] = ...
    def __init__(
        self, *,
        option1: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        option2: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...,
        option3: _typing.Optional[_fbthrift_compatible_with_InnerUnionPatch]=...
    ) -> None: ...

    def __call__(
        self, *,
        option1: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        option2: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...,
        option3: _typing.Optional[_fbthrift_compatible_with_InnerUnionPatch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[apache.thrift.op.patch.thrift_types.StringPatch, apache.thrift.op.patch.thrift_types.I32Patch, InnerUnionPatch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyUnionFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyUnionFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructPatch:
    pass


class MyStructPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructPatch):
    assign: _typing.Final[_typing.Optional[MyStruct]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[MyStructFieldPatch] = ...
    ensure: _typing.Final[MyStructEnsureStruct] = ...
    patch: _typing.Final[MyStructFieldPatch] = ...
    remove: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyStruct]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_MyStructFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_MyStructEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_MyStructFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyStruct]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_MyStructFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_MyStructEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_MyStructFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyStruct, bool, MyStructFieldPatch, MyStructEnsureStruct, MyStructFieldPatch, _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructField10Patch:
    pass


class MyStructField10Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructField10Patch):
    assign: _typing.Final[_typing.Optional[MyEnum]] = ...
    clear: _typing.Final[bool] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        clear: _typing.Optional[bool]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        clear: _typing.Optional[bool]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyEnum, bool]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructField10Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructField10Patch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructField23Patch:
    pass


class MyStructField23Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructField23Patch):
    assign: _typing.Final[_typing.Optional[MyEnum]] = ...
    clear: _typing.Final[bool] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        clear: _typing.Optional[bool]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        clear: _typing.Optional[bool]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyEnum, bool]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructField23Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructField23Patch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructField26Patch:
    pass


class MyStructField26Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructField26Patch):
    assign: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    clear: _typing.Final[bool] = ...
    prepend: _typing.Final[_typing.Sequence[int]] = ...
    append: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[int]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[int]]=...,
        append: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[int]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[int]]=...,
        append: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Sequence[int], bool, _typing.Sequence[int], _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructField26Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructField26Patch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructField27Patch:
    pass


class MyStructField27Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructField27Patch):
    assign: _typing.Final[_typing.Optional[_typing.AbstractSet[str]]] = ...
    clear: _typing.Final[bool] = ...
    remove: _typing.Final[_typing.AbstractSet[str]] = ...
    add: _typing.Final[_typing.AbstractSet[str]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.AbstractSet[str]]=...,
        clear: _typing.Optional[bool]=...,
        remove: _typing.Optional[_typing.AbstractSet[str]]=...,
        add: _typing.Optional[_typing.AbstractSet[str]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.AbstractSet[str]]=...,
        clear: _typing.Optional[bool]=...,
        remove: _typing.Optional[_typing.AbstractSet[str]]=...,
        add: _typing.Optional[_typing.AbstractSet[str]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.AbstractSet[str], bool, _typing.AbstractSet[str], _typing.AbstractSet[str]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructField27Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructField27Patch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructField28Patch:
    pass


class MyStructField28Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructField28Patch):
    assign: _typing.Final[_typing.Optional[_typing.Mapping[str, str]]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[_typing.Mapping[str, apache.thrift.op.patch.thrift_types.StringPatch]] = ...
    add: _typing.Final[_typing.Mapping[str, str]] = ...
    patch: _typing.Final[_typing.Mapping[str, apache.thrift.op.patch.thrift_types.StringPatch]] = ...
    remove: _typing.Final[_typing.AbstractSet[str]] = ...
    put: _typing.Final[_typing.Mapping[str, str]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Mapping[str, str]]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_typing.Mapping[str, apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]]=...,
        add: _typing.Optional[_typing.Mapping[str, str]]=...,
        patch: _typing.Optional[_typing.Mapping[str, apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]]=...,
        remove: _typing.Optional[_typing.AbstractSet[str]]=...,
        put: _typing.Optional[_typing.Mapping[str, str]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Mapping[str, str]]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_typing.Mapping[str, apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]]=...,
        add: _typing.Optional[_typing.Mapping[str, str]]=...,
        patch: _typing.Optional[_typing.Mapping[str, apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]]=...,
        remove: _typing.Optional[_typing.AbstractSet[str]]=...,
        put: _typing.Optional[_typing.Mapping[str, str]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Mapping[str, str], bool, _typing.Mapping[str, apache.thrift.op.patch.thrift_types.StringPatch], _typing.Mapping[str, str], _typing.Mapping[str, apache.thrift.op.patch.thrift_types.StringPatch], _typing.AbstractSet[str], _typing.Mapping[str, str]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructField28Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructField28Patch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructField29Patch:
    pass


class MyStructField29Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructField29Patch):
    assign: _typing.Final[_typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]] = ...
    clear: _typing.Final[bool] = ...
    prepend: _typing.Final[_typing.Sequence[_typing.Mapping[str, int]]] = ...
    append: _typing.Final[_typing.Sequence[_typing.Mapping[str, int]]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...,
        append: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...,
        append: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Sequence[_typing.Mapping[str, int]], bool, _typing.Sequence[_typing.Mapping[str, int]], _typing.Sequence[_typing.Mapping[str, int]]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructField29Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructField29Patch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructField30Patch:
    pass


class MyStructField30Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructField30Patch):
    assign: _typing.Final[_typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[_typing.Mapping[str, MyStructField30Patch1]] = ...
    add: _typing.Final[_typing.Mapping[str, _typing.Mapping[str, int]]] = ...
    patch: _typing.Final[_typing.Mapping[str, MyStructField30Patch1]] = ...
    remove: _typing.Final[_typing.AbstractSet[str]] = ...
    put: _typing.Final[_typing.Mapping[str, _typing.Mapping[str, int]]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_MyStructField30Patch1]]=...,
        add: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...,
        patch: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_MyStructField30Patch1]]=...,
        remove: _typing.Optional[_typing.AbstractSet[str]]=...,
        put: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_MyStructField30Patch1]]=...,
        add: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...,
        patch: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_MyStructField30Patch1]]=...,
        remove: _typing.Optional[_typing.AbstractSet[str]]=...,
        put: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Mapping[str, _typing.Mapping[str, int]], bool, _typing.Mapping[str, MyStructField30Patch1], _typing.Mapping[str, _typing.Mapping[str, int]], _typing.Mapping[str, MyStructField30Patch1], _typing.AbstractSet[str], _typing.Mapping[str, _typing.Mapping[str, int]]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructField30Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructField30Patch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructField30Patch1:
    pass


class MyStructField30Patch1(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructField30Patch1):
    assign: _typing.Final[_typing.Optional[_typing.Mapping[str, int]]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[_typing.Mapping[str, apache.thrift.op.patch.thrift_types.I32Patch]] = ...
    add: _typing.Final[_typing.Mapping[str, int]] = ...
    patch: _typing.Final[_typing.Mapping[str, apache.thrift.op.patch.thrift_types.I32Patch]] = ...
    remove: _typing.Final[_typing.AbstractSet[str]] = ...
    put: _typing.Final[_typing.Mapping[str, int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Mapping[str, int]]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_typing.Mapping[str, apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]]=...,
        add: _typing.Optional[_typing.Mapping[str, int]]=...,
        patch: _typing.Optional[_typing.Mapping[str, apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]]=...,
        remove: _typing.Optional[_typing.AbstractSet[str]]=...,
        put: _typing.Optional[_typing.Mapping[str, int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Mapping[str, int]]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_typing.Mapping[str, apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]]=...,
        add: _typing.Optional[_typing.Mapping[str, int]]=...,
        patch: _typing.Optional[_typing.Mapping[str, apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]]=...,
        remove: _typing.Optional[_typing.AbstractSet[str]]=...,
        put: _typing.Optional[_typing.Mapping[str, int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Mapping[str, int], bool, _typing.Mapping[str, apache.thrift.op.patch.thrift_types.I32Patch], _typing.Mapping[str, int], _typing.Mapping[str, apache.thrift.op.patch.thrift_types.I32Patch], _typing.AbstractSet[str], _typing.Mapping[str, int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructField30Patch1": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructField30Patch1": ...  # type: ignore


class _fbthrift_compatible_with_MyStructFieldPatch:
    pass


class MyStructFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructFieldPatch):
    structWithCustomDefault: _typing.Final[MyDataWithCustomDefaultPatch] = ...
    i32WithCustomDefault: _typing.Final[apache.thrift.op.patch.thrift_types.I32Patch] = ...
    mapMap: _typing.Final[MyStructField30Patch] = ...
    listMap: _typing.Final[MyStructField29Patch] = ...
    optMapVal: _typing.Final[MyStructField28Patch] = ...
    optSetVal: _typing.Final[MyStructField27Patch] = ...
    optListVal: _typing.Final[MyStructField26Patch] = ...
    optLateStructVal: _typing.Final[LateDefStructPatch] = ...
    optStructVal: _typing.Final[MyDataPatch] = ...
    optEnumVal: _typing.Final[MyStructField23Patch] = ...
    optBinaryVal: _typing.Final[apache.thrift.op.patch.thrift_types.BinaryPatch] = ...
    optStringVal: _typing.Final[apache.thrift.op.patch.thrift_types.StringPatch] = ...
    optDoubleVal: _typing.Final[apache.thrift.op.patch.thrift_types.DoublePatch] = ...
    optFloatVal: _typing.Final[apache.thrift.op.patch.thrift_types.FloatPatch] = ...
    optI64Val: _typing.Final[apache.thrift.op.patch.thrift_types.I64Patch] = ...
    optI32Val: _typing.Final[apache.thrift.op.patch.thrift_types.I32Patch] = ...
    optI16Val: _typing.Final[apache.thrift.op.patch.thrift_types.I16Patch] = ...
    optByteVal: _typing.Final[apache.thrift.op.patch.thrift_types.BytePatch] = ...
    optBoolVal: _typing.Final[apache.thrift.op.patch.thrift_types.BoolPatch] = ...
    lateStructVal: _typing.Final[LateDefStructPatch] = ...
    unionVal: _typing.Final[MyUnionPatch] = ...
    structVal: _typing.Final[MyDataPatch] = ...
    enumVal: _typing.Final[MyStructField10Patch] = ...
    binaryVal: _typing.Final[apache.thrift.op.patch.thrift_types.BinaryPatch] = ...
    stringVal: _typing.Final[apache.thrift.op.patch.thrift_types.StringPatch] = ...
    doubleVal: _typing.Final[apache.thrift.op.patch.thrift_types.DoublePatch] = ...
    floatVal: _typing.Final[apache.thrift.op.patch.thrift_types.FloatPatch] = ...
    i64Val: _typing.Final[apache.thrift.op.patch.thrift_types.I64Patch] = ...
    i32Val: _typing.Final[apache.thrift.op.patch.thrift_types.I32Patch] = ...
    i16Val: _typing.Final[apache.thrift.op.patch.thrift_types.I16Patch] = ...
    byteVal: _typing.Final[apache.thrift.op.patch.thrift_types.BytePatch] = ...
    boolVal: _typing.Final[apache.thrift.op.patch.thrift_types.BoolPatch] = ...
    structWithFieldCustomDefault: _typing.Final[MyDataPatch] = ...
    def __init__(
        self, *,
        structWithCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefaultPatch]=...,
        i32WithCustomDefault: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...,
        mapMap: _typing.Optional[_fbthrift_compatible_with_MyStructField30Patch]=...,
        listMap: _typing.Optional[_fbthrift_compatible_with_MyStructField29Patch]=...,
        optMapVal: _typing.Optional[_fbthrift_compatible_with_MyStructField28Patch]=...,
        optSetVal: _typing.Optional[_fbthrift_compatible_with_MyStructField27Patch]=...,
        optListVal: _typing.Optional[_fbthrift_compatible_with_MyStructField26Patch]=...,
        optLateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStructPatch]=...,
        optStructVal: _typing.Optional[_fbthrift_compatible_with_MyDataPatch]=...,
        optEnumVal: _typing.Optional[_fbthrift_compatible_with_MyStructField23Patch]=...,
        optBinaryVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BinaryPatch]=...,
        optStringVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        optDoubleVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_DoublePatch]=...,
        optFloatVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_FloatPatch]=...,
        optI64Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I64Patch]=...,
        optI32Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...,
        optI16Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I16Patch]=...,
        optByteVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BytePatch]=...,
        optBoolVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BoolPatch]=...,
        lateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStructPatch]=...,
        unionVal: _typing.Optional[_fbthrift_compatible_with_MyUnionPatch]=...,
        structVal: _typing.Optional[_fbthrift_compatible_with_MyDataPatch]=...,
        enumVal: _typing.Optional[_fbthrift_compatible_with_MyStructField10Patch]=...,
        binaryVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BinaryPatch]=...,
        stringVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        doubleVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_DoublePatch]=...,
        floatVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_FloatPatch]=...,
        i64Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I64Patch]=...,
        i32Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...,
        i16Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I16Patch]=...,
        byteVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BytePatch]=...,
        boolVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BoolPatch]=...,
        structWithFieldCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyDataPatch]=...
    ) -> None: ...

    def __call__(
        self, *,
        structWithCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefaultPatch]=...,
        i32WithCustomDefault: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...,
        mapMap: _typing.Optional[_fbthrift_compatible_with_MyStructField30Patch]=...,
        listMap: _typing.Optional[_fbthrift_compatible_with_MyStructField29Patch]=...,
        optMapVal: _typing.Optional[_fbthrift_compatible_with_MyStructField28Patch]=...,
        optSetVal: _typing.Optional[_fbthrift_compatible_with_MyStructField27Patch]=...,
        optListVal: _typing.Optional[_fbthrift_compatible_with_MyStructField26Patch]=...,
        optLateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStructPatch]=...,
        optStructVal: _typing.Optional[_fbthrift_compatible_with_MyDataPatch]=...,
        optEnumVal: _typing.Optional[_fbthrift_compatible_with_MyStructField23Patch]=...,
        optBinaryVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BinaryPatch]=...,
        optStringVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        optDoubleVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_DoublePatch]=...,
        optFloatVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_FloatPatch]=...,
        optI64Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I64Patch]=...,
        optI32Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...,
        optI16Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I16Patch]=...,
        optByteVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BytePatch]=...,
        optBoolVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BoolPatch]=...,
        lateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStructPatch]=...,
        unionVal: _typing.Optional[_fbthrift_compatible_with_MyUnionPatch]=...,
        structVal: _typing.Optional[_fbthrift_compatible_with_MyDataPatch]=...,
        enumVal: _typing.Optional[_fbthrift_compatible_with_MyStructField10Patch]=...,
        binaryVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BinaryPatch]=...,
        stringVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_StringPatch]=...,
        doubleVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_DoublePatch]=...,
        floatVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_FloatPatch]=...,
        i64Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I64Patch]=...,
        i32Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I32Patch]=...,
        i16Val: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_I16Patch]=...,
        byteVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BytePatch]=...,
        boolVal: _typing.Optional[apache.thrift.op.patch.thrift_types._fbthrift_compatible_with_BoolPatch]=...,
        structWithFieldCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyDataPatch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyDataWithCustomDefaultPatch, apache.thrift.op.patch.thrift_types.I32Patch, MyStructField30Patch, MyStructField29Patch, MyStructField28Patch, MyStructField27Patch, MyStructField26Patch, LateDefStructPatch, MyDataPatch, MyStructField23Patch, apache.thrift.op.patch.thrift_types.BinaryPatch, apache.thrift.op.patch.thrift_types.StringPatch, apache.thrift.op.patch.thrift_types.DoublePatch, apache.thrift.op.patch.thrift_types.FloatPatch, apache.thrift.op.patch.thrift_types.I64Patch, apache.thrift.op.patch.thrift_types.I32Patch, apache.thrift.op.patch.thrift_types.I16Patch, apache.thrift.op.patch.thrift_types.BytePatch, apache.thrift.op.patch.thrift_types.BoolPatch, LateDefStructPatch, MyUnionPatch, MyDataPatch, MyStructField10Patch, apache.thrift.op.patch.thrift_types.BinaryPatch, apache.thrift.op.patch.thrift_types.StringPatch, apache.thrift.op.patch.thrift_types.DoublePatch, apache.thrift.op.patch.thrift_types.FloatPatch, apache.thrift.op.patch.thrift_types.I64Patch, apache.thrift.op.patch.thrift_types.I32Patch, apache.thrift.op.patch.thrift_types.I16Patch, apache.thrift.op.patch.thrift_types.BytePatch, apache.thrift.op.patch.thrift_types.BoolPatch, MyDataPatch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_MyStructEnsureStruct:
    pass


class MyStructEnsureStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_MyStructEnsureStruct):
    structWithCustomDefault: _typing.Final[_typing.Optional[MyDataWithCustomDefault]] = ...
    i32WithCustomDefault: _typing.Final[_typing.Optional[int]] = ...
    mapMap: _typing.Final[_typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]] = ...
    listMap: _typing.Final[_typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]] = ...
    optMapVal: _typing.Final[_typing.Optional[_typing.Mapping[str, str]]] = ...
    optSetVal: _typing.Final[_typing.Optional[_typing.AbstractSet[str]]] = ...
    optListVal: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    optLateStructVal: _typing.Final[_typing.Optional[LateDefStruct]] = ...
    optStructVal: _typing.Final[_typing.Optional[MyData]] = ...
    optEnumVal: _typing.Final[_typing.Optional[MyEnum]] = ...
    optBinaryVal: _typing.Final[_typing.Optional[_fbthrift_iobuf.IOBuf]] = ...
    optStringVal: _typing.Final[_typing.Optional[str]] = ...
    optDoubleVal: _typing.Final[_typing.Optional[float]] = ...
    optFloatVal: _typing.Final[_typing.Optional[float]] = ...
    optI64Val: _typing.Final[_typing.Optional[int]] = ...
    optI32Val: _typing.Final[_typing.Optional[int]] = ...
    optI16Val: _typing.Final[_typing.Optional[int]] = ...
    optByteVal: _typing.Final[_typing.Optional[int]] = ...
    optBoolVal: _typing.Final[_typing.Optional[bool]] = ...
    lateStructVal: _typing.Final[_typing.Optional[LateDefStruct]] = ...
    unionVal: _typing.Final[_typing.Optional[MyUnion]] = ...
    structVal: _typing.Final[_typing.Optional[MyData]] = ...
    enumVal: _typing.Final[_typing.Optional[MyEnum]] = ...
    binaryVal: _typing.Final[_typing.Optional[_fbthrift_iobuf.IOBuf]] = ...
    stringVal: _typing.Final[_typing.Optional[str]] = ...
    doubleVal: _typing.Final[_typing.Optional[float]] = ...
    floatVal: _typing.Final[_typing.Optional[float]] = ...
    i64Val: _typing.Final[_typing.Optional[int]] = ...
    i32Val: _typing.Final[_typing.Optional[int]] = ...
    i16Val: _typing.Final[_typing.Optional[int]] = ...
    byteVal: _typing.Final[_typing.Optional[int]] = ...
    boolVal: _typing.Final[_typing.Optional[bool]] = ...
    structWithFieldCustomDefault: _typing.Final[_typing.Optional[MyData]] = ...
    def __init__(
        self, *,
        structWithCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefault]=...,
        i32WithCustomDefault: _typing.Optional[int]=...,
        mapMap: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...,
        listMap: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...,
        optMapVal: _typing.Optional[_typing.Mapping[str, str]]=...,
        optSetVal: _typing.Optional[_typing.AbstractSet[str]]=...,
        optListVal: _typing.Optional[_typing.Sequence[int]]=...,
        optLateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        optStructVal: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        optEnumVal: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        optBinaryVal: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        optStringVal: _typing.Optional[str]=...,
        optDoubleVal: _typing.Optional[float]=...,
        optFloatVal: _typing.Optional[float]=...,
        optI64Val: _typing.Optional[int]=...,
        optI32Val: _typing.Optional[int]=...,
        optI16Val: _typing.Optional[int]=...,
        optByteVal: _typing.Optional[int]=...,
        optBoolVal: _typing.Optional[bool]=...,
        lateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        unionVal: _typing.Optional[_fbthrift_compatible_with_MyUnion]=...,
        structVal: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        enumVal: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        binaryVal: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        stringVal: _typing.Optional[str]=...,
        doubleVal: _typing.Optional[float]=...,
        floatVal: _typing.Optional[float]=...,
        i64Val: _typing.Optional[int]=...,
        i32Val: _typing.Optional[int]=...,
        i16Val: _typing.Optional[int]=...,
        byteVal: _typing.Optional[int]=...,
        boolVal: _typing.Optional[bool]=...,
        structWithFieldCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyData]=...
    ) -> None: ...

    def __call__(
        self, *,
        structWithCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyDataWithCustomDefault]=...,
        i32WithCustomDefault: _typing.Optional[int]=...,
        mapMap: _typing.Optional[_typing.Mapping[str, _typing.Mapping[str, int]]]=...,
        listMap: _typing.Optional[_typing.Sequence[_typing.Mapping[str, int]]]=...,
        optMapVal: _typing.Optional[_typing.Mapping[str, str]]=...,
        optSetVal: _typing.Optional[_typing.AbstractSet[str]]=...,
        optListVal: _typing.Optional[_typing.Sequence[int]]=...,
        optLateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        optStructVal: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        optEnumVal: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        optBinaryVal: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        optStringVal: _typing.Optional[str]=...,
        optDoubleVal: _typing.Optional[float]=...,
        optFloatVal: _typing.Optional[float]=...,
        optI64Val: _typing.Optional[int]=...,
        optI32Val: _typing.Optional[int]=...,
        optI16Val: _typing.Optional[int]=...,
        optByteVal: _typing.Optional[int]=...,
        optBoolVal: _typing.Optional[bool]=...,
        lateStructVal: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        unionVal: _typing.Optional[_fbthrift_compatible_with_MyUnion]=...,
        structVal: _typing.Optional[_fbthrift_compatible_with_MyData]=...,
        enumVal: _typing.Optional[_fbthrift_compatible_with_MyEnum]=...,
        binaryVal: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        stringVal: _typing.Optional[str]=...,
        doubleVal: _typing.Optional[float]=...,
        floatVal: _typing.Optional[float]=...,
        i64Val: _typing.Optional[int]=...,
        i32Val: _typing.Optional[int]=...,
        i16Val: _typing.Optional[int]=...,
        byteVal: _typing.Optional[int]=...,
        boolVal: _typing.Optional[bool]=...,
        structWithFieldCustomDefault: _typing.Optional[_fbthrift_compatible_with_MyData]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[MyDataWithCustomDefault, int, _typing.Mapping[str, _typing.Mapping[str, int]], _typing.Sequence[_typing.Mapping[str, int]], _typing.Mapping[str, str], _typing.AbstractSet[str], _typing.Sequence[int], LateDefStruct, MyData, MyEnum, _fbthrift_iobuf.IOBuf, str, float, float, int, int, int, int, bool, LateDefStruct, MyUnion, MyData, MyEnum, _fbthrift_iobuf.IOBuf, str, float, float, int, int, int, int, bool, MyData]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.MyStructEnsureStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStructEnsureStruct": ...  # type: ignore


class _fbthrift_compatible_with_LateDefStructPatch:
    pass


class LateDefStructPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_LateDefStructPatch):
    assign: _typing.Final[_typing.Optional[LateDefStruct]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[LateDefStructFieldPatch] = ...
    ensure: _typing.Final[LateDefStructEnsureStruct] = ...
    patch: _typing.Final[LateDefStructFieldPatch] = ...
    remove: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_LateDefStructFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_LateDefStructEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_LateDefStructFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_LateDefStruct]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_LateDefStructFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_LateDefStructEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_LateDefStructFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[LateDefStruct, bool, LateDefStructFieldPatch, LateDefStructEnsureStruct, LateDefStructFieldPatch, _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.LateDefStructPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.LateDefStructPatch": ...  # type: ignore


class _fbthrift_compatible_with_LateDefStructFieldPatch:
    pass


class LateDefStructFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_LateDefStructFieldPatch):
    def __init__(
        self,
    ) -> None: ...

    def __call__(
        self,
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[None]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.LateDefStructFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.LateDefStructFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_LateDefStructEnsureStruct:
    pass


class LateDefStructEnsureStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_LateDefStructEnsureStruct):
    def __init__(
        self,
    ) -> None: ...

    def __call__(
        self,
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[None]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.LateDefStructEnsureStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.LateDefStructEnsureStruct": ...  # type: ignore


class _fbthrift_compatible_with_RecursivePatch:
    pass


class RecursivePatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RecursivePatch):
    assign: _typing.Final[_typing.Optional[Recursive]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[RecursiveFieldPatch] = ...
    ensure: _typing.Final[RecursiveEnsureStruct] = ...
    patch: _typing.Final[RecursiveFieldPatch] = ...
    remove: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_Recursive]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_RecursiveFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_RecursiveEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_RecursiveFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_Recursive]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_RecursiveFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_RecursiveEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_RecursiveFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[Recursive, bool, RecursiveFieldPatch, RecursiveEnsureStruct, RecursiveFieldPatch, _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RecursivePatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RecursivePatch": ...  # type: ignore


class _fbthrift_compatible_with_RecursiveField1Patch:
    pass


class RecursiveField1Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RecursiveField1Patch):
    assign: _typing.Final[_typing.Optional[_typing.Mapping[str, Recursive]]] = ...
    clear: _typing.Final[bool] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_Recursive]]=...,
        clear: _typing.Optional[bool]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_Recursive]]=...,
        clear: _typing.Optional[bool]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Mapping[str, Recursive], bool]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RecursiveField1Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RecursiveField1Patch": ...  # type: ignore


class _fbthrift_compatible_with_RecursiveFieldPatch:
    pass


class RecursiveFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RecursiveFieldPatch):
    nodes: _typing.Final[RecursiveField1Patch] = ...
    def __init__(
        self, *,
        nodes: _typing.Optional[_fbthrift_compatible_with_RecursiveField1Patch]=...
    ) -> None: ...

    def __call__(
        self, *,
        nodes: _typing.Optional[_fbthrift_compatible_with_RecursiveField1Patch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[RecursiveField1Patch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RecursiveFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RecursiveFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_RecursiveEnsureStruct:
    pass


class RecursiveEnsureStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RecursiveEnsureStruct):
    nodes: _typing.Final[_typing.Optional[_typing.Mapping[str, Recursive]]] = ...
    def __init__(
        self, *,
        nodes: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_Recursive]]=...
    ) -> None: ...

    def __call__(
        self, *,
        nodes: _typing.Optional[_typing.Mapping[str, _fbthrift_compatible_with_Recursive]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Mapping[str, Recursive]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RecursiveEnsureStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RecursiveEnsureStruct": ...  # type: ignore


class _fbthrift_compatible_with_BarPatch:
    pass


class BarPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_BarPatch):
    assign: _typing.Final[_typing.Optional[Bar]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[BarFieldPatch] = ...
    ensure: _typing.Final[BarEnsureStruct] = ...
    patch: _typing.Final[BarFieldPatch] = ...
    remove: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_Bar]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_BarFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_BarEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_BarFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_Bar]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_BarFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_BarEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_BarFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[Bar, bool, BarFieldPatch, BarEnsureStruct, BarFieldPatch, _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.BarPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.BarPatch": ...  # type: ignore


class _fbthrift_compatible_with_BarFieldPatch:
    pass


class BarFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_BarFieldPatch):
    loop: _typing.Final[LoopPatch] = ...
    def __init__(
        self, *,
        loop: _typing.Optional[_fbthrift_compatible_with_LoopPatch]=...
    ) -> None: ...

    def __call__(
        self, *,
        loop: _typing.Optional[_fbthrift_compatible_with_LoopPatch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[LoopPatch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.BarFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.BarFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_BarEnsureStruct:
    pass


class BarEnsureStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_BarEnsureStruct):
    loop: _typing.Final[_typing.Optional[Loop]] = ...
    def __init__(
        self, *,
        loop: _typing.Optional[_fbthrift_compatible_with_Loop]=...
    ) -> None: ...

    def __call__(
        self, *,
        loop: _typing.Optional[_fbthrift_compatible_with_Loop]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[Loop]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.BarEnsureStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.BarEnsureStruct": ...  # type: ignore


class _fbthrift_compatible_with_LoopPatch:
    pass


class LoopPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_LoopPatch):
    assign: _typing.Final[_typing.Optional[Loop]] = ...
    clear: _typing.Final[bool] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_Loop]=...,
        clear: _typing.Optional[bool]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_Loop]=...,
        clear: _typing.Optional[bool]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[Loop, bool]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.LoopPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.LoopPatch": ...  # type: ignore


class _fbthrift_compatible_with_RefFieldsPatch:
    pass


class RefFieldsPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RefFieldsPatch):
    assign: _typing.Final[_typing.Optional[RefFields]] = ...
    clear: _typing.Final[bool] = ...
    patchPrior: _typing.Final[RefFieldsFieldPatch] = ...
    ensure: _typing.Final[RefFieldsEnsureStruct] = ...
    patch: _typing.Final[RefFieldsFieldPatch] = ...
    remove: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_RefFields]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_RefFieldsFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_RefFieldsEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_RefFieldsFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_fbthrift_compatible_with_RefFields]=...,
        clear: _typing.Optional[bool]=...,
        patchPrior: _typing.Optional[_fbthrift_compatible_with_RefFieldsFieldPatch]=...,
        ensure: _typing.Optional[_fbthrift_compatible_with_RefFieldsEnsureStruct]=...,
        patch: _typing.Optional[_fbthrift_compatible_with_RefFieldsFieldPatch]=...,
        remove: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[RefFields, bool, RefFieldsFieldPatch, RefFieldsEnsureStruct, RefFieldsFieldPatch, _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RefFieldsPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RefFieldsPatch": ...  # type: ignore


class _fbthrift_compatible_with_RefFieldsField1Patch:
    pass


class RefFieldsField1Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RefFieldsField1Patch):
    assign: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    clear: _typing.Final[bool] = ...
    prepend: _typing.Final[_typing.Sequence[int]] = ...
    append: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[int]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[int]]=...,
        append: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[int]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[int]]=...,
        append: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Sequence[int], bool, _typing.Sequence[int], _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RefFieldsField1Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RefFieldsField1Patch": ...  # type: ignore


class _fbthrift_compatible_with_RefFieldsField4Patch:
    pass


class RefFieldsField4Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RefFieldsField4Patch):
    assign: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    clear: _typing.Final[bool] = ...
    prepend: _typing.Final[_typing.Sequence[int]] = ...
    append: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[int]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[int]]=...,
        append: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[int]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[int]]=...,
        append: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Sequence[int], bool, _typing.Sequence[int], _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RefFieldsField4Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RefFieldsField4Patch": ...  # type: ignore


class _fbthrift_compatible_with_RefFieldsField7Patch:
    pass


class RefFieldsField7Patch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RefFieldsField7Patch):
    assign: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    clear: _typing.Final[bool] = ...
    prepend: _typing.Final[_typing.Sequence[int]] = ...
    append: _typing.Final[_typing.Sequence[int]] = ...
    def __init__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[int]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[int]]=...,
        append: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        assign: _typing.Optional[_typing.Sequence[int]]=...,
        clear: _typing.Optional[bool]=...,
        prepend: _typing.Optional[_typing.Sequence[int]]=...,
        append: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Sequence[int], bool, _typing.Sequence[int], _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RefFieldsField7Patch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RefFieldsField7Patch": ...  # type: ignore


class _fbthrift_compatible_with_RefFieldsFieldPatch:
    pass


class RefFieldsFieldPatch(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RefFieldsFieldPatch):
    unique: _typing.Final[RefFieldsField1Patch] = ...
    opt_unique: _typing.Final[RefFieldsField4Patch] = ...
    opt_box: _typing.Final[RefFieldsField7Patch] = ...
    def __init__(
        self, *,
        unique: _typing.Optional[_fbthrift_compatible_with_RefFieldsField1Patch]=...,
        opt_unique: _typing.Optional[_fbthrift_compatible_with_RefFieldsField4Patch]=...,
        opt_box: _typing.Optional[_fbthrift_compatible_with_RefFieldsField7Patch]=...
    ) -> None: ...

    def __call__(
        self, *,
        unique: _typing.Optional[_fbthrift_compatible_with_RefFieldsField1Patch]=...,
        opt_unique: _typing.Optional[_fbthrift_compatible_with_RefFieldsField4Patch]=...,
        opt_box: _typing.Optional[_fbthrift_compatible_with_RefFieldsField7Patch]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[RefFieldsField1Patch, RefFieldsField4Patch, RefFieldsField7Patch]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RefFieldsFieldPatch": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RefFieldsFieldPatch": ...  # type: ignore


class _fbthrift_compatible_with_RefFieldsEnsureStruct:
    pass


class RefFieldsEnsureStruct(_fbthrift_python_types.Struct, _fbthrift_compatible_with_RefFieldsEnsureStruct):
    unique: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    shared_const: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    shared_mustable: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    opt_unique: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    opt_shared_const: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    opt_shared_mustable: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    opt_box: _typing.Final[_typing.Optional[_typing.Sequence[int]]] = ...
    def __init__(
        self, *,
        unique: _typing.Optional[_typing.Sequence[int]]=...,
        shared_const: _typing.Optional[_typing.Sequence[int]]=...,
        shared_mustable: _typing.Optional[_typing.Sequence[int]]=...,
        opt_unique: _typing.Optional[_typing.Sequence[int]]=...,
        opt_shared_const: _typing.Optional[_typing.Sequence[int]]=...,
        opt_shared_mustable: _typing.Optional[_typing.Sequence[int]]=...,
        opt_box: _typing.Optional[_typing.Sequence[int]]=...
    ) -> None: ...

    def __call__(
        self, *,
        unique: _typing.Optional[_typing.Sequence[int]]=...,
        shared_const: _typing.Optional[_typing.Sequence[int]]=...,
        shared_mustable: _typing.Optional[_typing.Sequence[int]]=...,
        opt_unique: _typing.Optional[_typing.Sequence[int]]=...,
        opt_shared_const: _typing.Optional[_typing.Sequence[int]]=...,
        opt_shared_mustable: _typing.Optional[_typing.Sequence[int]]=...,
        opt_box: _typing.Optional[_typing.Sequence[int]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[_typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int], _typing.Sequence[int]]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.patch.module.types.RefFieldsEnsureStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.RefFieldsEnsureStruct": ...  # type: ignore
