
#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from cpython.ref cimport PyObject
from libcpp.utility cimport move as __move
from folly.iobuf cimport (
    from_unique_ptr as __IOBuf_from_unique_ptr,
    IOBuf as __IOBuf,
)
from thrift.python.serializer import (
    deserialize as __deserialize,
    Protocol as __Protocol,
    serialize_iobuf as __serialize_iobuf,
)
import test.fixtures.enums.module.thrift_types as __thrift_types

cdef api int can_extract__test__fixtures__enums__module__SomeStruct(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.SomeStruct) else 0


cdef api object init__test__fixtures__enums__module__SomeStruct(object data):
    return __thrift_types.SomeStruct._fbthrift_create(data)

cdef api int can_extract__test__fixtures__enums__module__MyStruct(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.MyStruct) else 0


cdef api object init__test__fixtures__enums__module__MyStruct(object data):
    return __thrift_types.MyStruct._fbthrift_create(data)

cdef api int can_extract__test__fixtures__enums__module__Metasyntactic(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.Metasyntactic) else 0

cdef api object construct__test__fixtures__enums__module__Metasyntactic(int64_t __val):
    return __thrift_types.Metasyntactic(__val)

cdef api int can_extract__test__fixtures__enums__module__MyEnum1(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.MyEnum1) else 0

cdef api object construct__test__fixtures__enums__module__MyEnum1(int64_t __val):
    return __thrift_types.MyEnum1(__val)

cdef api int can_extract__test__fixtures__enums__module__MyEnum2(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.MyEnum2) else 0

cdef api object construct__test__fixtures__enums__module__MyEnum2(int64_t __val):
    return __thrift_types.MyEnum2(__val)

cdef api int can_extract__test__fixtures__enums__module__MyEnum3(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.MyEnum3) else 0

cdef api object construct__test__fixtures__enums__module__MyEnum3(int64_t __val):
    return __thrift_types.MyEnum3(__val)

cdef api int can_extract__test__fixtures__enums__module__MyEnum4(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.MyEnum4) else 0

cdef api object construct__test__fixtures__enums__module__MyEnum4(int64_t __val):
    return __thrift_types.MyEnum4(__val)

cdef api int can_extract__test__fixtures__enums__module__MyBitmaskEnum1(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.MyBitmaskEnum1) else 0

cdef api object construct__test__fixtures__enums__module__MyBitmaskEnum1(int64_t __val):
    return __thrift_types.MyBitmaskEnum1(__val)

cdef api int can_extract__test__fixtures__enums__module__MyBitmaskEnum2(object __obj) except -1:
    return 1 if isinstance(__obj, __thrift_types.MyBitmaskEnum2) else 0

cdef api object construct__test__fixtures__enums__module__MyBitmaskEnum2(int64_t __val):
    return __thrift_types.MyBitmaskEnum2(__val)

