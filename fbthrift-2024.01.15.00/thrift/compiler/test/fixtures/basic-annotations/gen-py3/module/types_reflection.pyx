#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#


import folly.iobuf as _fbthrift_iobuf

from thrift.py3.reflection cimport (
    NumberType as __NumberType,
    StructType as __StructType,
    Qualifier as __Qualifier,
)


cimport module.types as _module_types

from thrift.py3.types cimport (
    constant_shared_ptr,
    default_inst,
)


cdef __StructSpec get_reflection__MyStructNestedAnnotation():
    cdef _module_types.MyStructNestedAnnotation defaults = _module_types.MyStructNestedAnnotation._fbthrift_create(
        constant_shared_ptr[_module_types.cMyStructNestedAnnotation](
            default_inst[_module_types.cMyStructNestedAnnotation]()
        )
    )
    cdef __StructSpec spec = __StructSpec._fbthrift_create(
        name="MyStructNestedAnnotation",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="name",
            py_name="name",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__SecretStruct():
    cdef _module_types.SecretStruct defaults = _module_types.SecretStruct._fbthrift_create(
        constant_shared_ptr[_module_types.cSecretStruct](
            default_inst[_module_types.cSecretStruct]()
        )
    )
    cdef __StructSpec spec = __StructSpec._fbthrift_create(
        name="SecretStruct",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="id",
            py_name="id",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="password",
            py_name="password",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
                """java.sensitive""": """1""",            },
        ),
    )
    return spec
cdef __ListSpec get_reflection__std_deque_std_string__List__string():
    return __ListSpec._fbthrift_create(
        value=str,
        kind=__NumberType.NOT_A_NUMBER,
    )

