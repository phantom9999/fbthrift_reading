// @generated by Thrift for thrift/compiler/test/fixtures/types/src/module.thrift
// This file is probably not the place you want to edit!

//! Thrift error definitions for `module`.

/// Error definitions for `SomeService`.
pub mod some_service {

    pub type BounceMapError = ::fbthrift::NonthrowingFunctionError;

    impl ::std::convert::From<crate::services::some_service::BounceMapExn> for
        ::std::result::Result<included::types::SomeMap, BounceMapError>
    {
        fn from(e: crate::services::some_service::BounceMapExn) -> Self {
            match e {
                crate::services::some_service::BounceMapExn::Success(res) => {
                    ::std::result::Result::Ok(res)
                }
                crate::services::some_service::BounceMapExn::ApplicationException(aexn) =>
                    ::std::result::Result::Err(BounceMapError::ApplicationException(aexn)),
            }
        }
    }

    pub type BinaryKeyedMapError = ::fbthrift::NonthrowingFunctionError;

    impl ::std::convert::From<crate::services::some_service::BinaryKeyedMapExn> for
        ::std::result::Result<::std::collections::BTreeMap<crate::types::TBinary, ::std::primitive::i64>, BinaryKeyedMapError>
    {
        fn from(e: crate::services::some_service::BinaryKeyedMapExn) -> Self {
            match e {
                crate::services::some_service::BinaryKeyedMapExn::Success(res) => {
                    ::std::result::Result::Ok(res)
                }
                crate::services::some_service::BinaryKeyedMapExn::ApplicationException(aexn) =>
                    ::std::result::Result::Err(BinaryKeyedMapError::ApplicationException(aexn)),
            }
        }
    }

}

